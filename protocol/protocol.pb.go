// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol.proto

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	protocol.proto

It has these top-level messages:
	Port
	Graph
	Error
	Message
	Payload
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Port struct {
	Url      string            `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Port) Reset()                    { *m = Port{} }
func (m *Port) String() string            { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()               {}
func (*Port) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Port) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Port) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Graph struct {
	Seq    int32   `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Ports  []*Port `protobuf:"bytes,2,rep,name=ports" json:"ports,omitempty"`
	Errors []*Port `protobuf:"bytes,3,rep,name=errors" json:"errors,omitempty"`
}

func (m *Graph) Reset()                    { *m = Graph{} }
func (m *Graph) String() string            { return proto.CompactTextString(m) }
func (*Graph) ProtoMessage()               {}
func (*Graph) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Graph) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *Graph) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Graph) GetErrors() []*Port {
	if m != nil {
		return m.Errors
	}
	return nil
}

type Error struct {
	Namespace   string            `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Code        int64             `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Description string            `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Stack       string            `protobuf:"bytes,4,opt,name=stack" json:"stack,omitempty"`
	Context     map[string]string `protobuf:"bytes,5,rep,name=context" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Error) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Error) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Error) GetStack() string {
	if m != nil {
		return m.Stack
	}
	return ""
}

func (m *Error) GetContext() map[string]string {
	if m != nil {
		return m.Context
	}
	return nil
}

type Message struct {
	Id     string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Header map[string]string `protobuf:"bytes,2,rep,name=header" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body   []byte            `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Error  *Error            `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Message) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Message) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Payload struct {
	Id        string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Timestamp int64             `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Graph     *Graph            `protobuf:"bytes,3,opt,name=graph" json:"graph,omitempty"`
	Message   *Message          `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	Context   map[string]string `protobuf:"bytes,5,rep,name=context" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Payload) Reset()                    { *m = Payload{} }
func (m *Payload) String() string            { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()               {}
func (*Payload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Payload) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Payload) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Payload) GetGraph() *Graph {
	if m != nil {
		return m.Graph
	}
	return nil
}

func (m *Payload) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Payload) GetContext() map[string]string {
	if m != nil {
		return m.Context
	}
	return nil
}

func init() {
	proto.RegisterType((*Port)(nil), "protocol.Port")
	proto.RegisterType((*Graph)(nil), "protocol.Graph")
	proto.RegisterType((*Error)(nil), "protocol.Error")
	proto.RegisterType((*Message)(nil), "protocol.Message")
	proto.RegisterType((*Payload)(nil), "protocol.Payload")
}

func init() { proto.RegisterFile("protocol.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 434 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0x56, 0x92, 0xa6, 0xd9, 0x4e, 0x96, 0x02, 0x23, 0x0e, 0x51, 0x55, 0x50, 0x55, 0x01, 0x5a,
	0x09, 0x29, 0x87, 0x45, 0xa0, 0xb2, 0x1c, 0xd1, 0x0a, 0x2e, 0x2b, 0xad, 0xfc, 0x06, 0xde, 0xd8,
	0xea, 0x46, 0x4d, 0xe2, 0x60, 0x7b, 0x11, 0x39, 0xf2, 0x04, 0xbc, 0x15, 0x6f, 0xc2, 0x7b, 0x20,
	0xff, 0xa4, 0x4d, 0x5b, 0x2e, 0x95, 0xf6, 0x36, 0x9e, 0x6f, 0xbe, 0xf1, 0xf7, 0x7d, 0x36, 0x4c,
	0x5b, 0x29, 0xb4, 0x28, 0x44, 0x95, 0xdb, 0x02, 0xcf, 0xfa, 0xf3, 0xf2, 0x77, 0x00, 0xa3, 0x5b,
	0x21, 0x35, 0x3e, 0x83, 0xe8, 0x41, 0x56, 0x59, 0xb0, 0x08, 0x2e, 0x26, 0xc4, 0x94, 0xb8, 0x82,
	0xb3, 0x9a, 0x6b, 0xca, 0xa8, 0xa6, 0x59, 0xb8, 0x88, 0x2e, 0xd2, 0xcb, 0x79, 0xbe, 0xdd, 0x63,
	0x38, 0xf9, 0x8d, 0x87, 0xaf, 0x1b, 0x2d, 0x3b, 0xb2, 0x9d, 0x9e, 0x7d, 0x86, 0x27, 0x7b, 0x90,
	0x59, 0xbe, 0xe1, 0x5d, 0xbf, 0x7c, 0xc3, 0x3b, 0x7c, 0x01, 0xf1, 0x0f, 0x5a, 0x3d, 0xf0, 0x2c,
	0xb4, 0x3d, 0x77, 0xb8, 0x0a, 0x57, 0xc1, 0x72, 0x0d, 0xf1, 0x57, 0x49, 0xdb, 0x7b, 0x43, 0x52,
	0xfc, 0xbb, 0x25, 0xc5, 0xc4, 0x94, 0xf8, 0x1a, 0xe2, 0x56, 0x48, 0xad, 0xbc, 0x9c, 0xe9, 0xbe,
	0x1c, 0xe2, 0x40, 0x7c, 0x0b, 0x63, 0x2e, 0xa5, 0x90, 0x2a, 0x8b, 0xfe, 0x3b, 0xe6, 0xd1, 0xe5,
	0xdf, 0x00, 0xe2, 0x6b, 0x53, 0xe2, 0x1c, 0x26, 0x0d, 0xad, 0xb9, 0x6a, 0x69, 0xc1, 0xbd, 0xc8,
	0x5d, 0x03, 0x11, 0x46, 0x85, 0x60, 0x4e, 0x69, 0x44, 0x6c, 0x8d, 0x0b, 0x48, 0x19, 0x57, 0x85,
	0x2c, 0x5b, 0x5d, 0x8a, 0x26, 0x8b, 0x2c, 0x67, 0xd8, 0x32, 0x06, 0x95, 0xa6, 0xc5, 0x26, 0x1b,
	0x39, 0x83, 0xf6, 0x80, 0x1f, 0x21, 0x29, 0x44, 0xa3, 0xf9, 0x4f, 0x9d, 0xc5, 0x87, 0x91, 0x5a,
	0x2d, 0xf9, 0x17, 0x07, 0xbb, 0x48, 0xfb, 0xe1, 0xd9, 0x15, 0x9c, 0x0f, 0x81, 0x93, 0x02, 0xfd,
	0x13, 0x40, 0x72, 0xc3, 0x95, 0xa2, 0x6b, 0x8e, 0x53, 0x08, 0x4b, 0xe6, 0x69, 0x61, 0xc9, 0xf0,
	0x03, 0x8c, 0xef, 0x39, 0x65, 0x5c, 0xfa, 0x48, 0x5f, 0xee, 0xe4, 0x78, 0x4a, 0xfe, 0xcd, 0xe2,
	0x4e, 0x8f, 0x1f, 0x36, 0x91, 0xdc, 0x09, 0xd6, 0x59, 0xdf, 0xe7, 0xc4, 0xd6, 0xf8, 0x06, 0x62,
	0x1b, 0xac, 0x35, 0x9c, 0x5e, 0x3e, 0x3d, 0x30, 0x46, 0x1c, 0x3a, 0xfb, 0x04, 0xe9, 0x60, 0xe3,
	0x49, 0x46, 0x7e, 0x85, 0x90, 0xdc, 0xd2, 0xae, 0x12, 0x94, 0x1d, 0x19, 0x99, 0xc3, 0x44, 0x97,
	0x35, 0x57, 0x9a, 0xd6, 0xad, 0x7f, 0xa9, 0x5d, 0xc3, 0x68, 0x5b, 0x9b, 0x3f, 0x65, 0x05, 0xef,
	0x69, 0xb3, 0x5f, 0x8d, 0x38, 0x14, 0xdf, 0x41, 0x52, 0x3b, 0xd7, 0xde, 0xc4, 0xf3, 0xa3, 0x38,
	0x48, 0x3f, 0x81, 0xab, 0xc3, 0xa7, 0x7c, 0x35, 0xf8, 0x67, 0x4e, 0xe5, 0xe3, 0x3f, 0xe6, 0xdd,
	0xd8, 0xde, 0xf1, 0xfe, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x49, 0xde, 0xd0, 0xd2, 0x03,
	0x00, 0x00,
}
